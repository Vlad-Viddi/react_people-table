{"version":3,"sources":["components/HomePage.tsx","helpers/api.ts","components/PersonRow.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","getPeople","a","fetch","dataFromServer","json","people","PersonRow","person","id","name","sex","born","died","slug","fatherName","motherName","father","mother","personSlug","useParams","className","classnames","active","key","table__body","male","female","to","tableHeader","PeoplePage","useState","setPeople","useEffect","then","peopleFromServer","preparedPeople","map","index","find","mom","dad","item","toUpperCase","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d418e9e.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport const HomePage = () => {\n  return (\n    <h2>Home Page perhaps</h2>\n  );\n};\n","const urlWithPeople = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async (): Promise<Person[]> => {\n  const dataFromServer = await fetch(urlWithPeople);\n  const people = await dataFromServer.json();\n\n  return people;\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport {\n  Link,\n  useParams,\n} from 'react-router-dom';\n\n\ntype PropsPersonRow = {\n  person: Person;\n};\n\nexport const PersonRow: React.FC<PropsPersonRow> = ({ person }) => {\n  const {\n    id,\n    name,\n    sex,\n    born,\n    died,\n    slug,\n    fatherName,\n    motherName,\n    father,\n    mother,\n  } = person;\n\n  const { personSlug } = useParams();\n\n  return (\n    <tr\n      className={classnames({ active: personSlug === slug })}\n      key={name}\n    >\n      <td className=\"table__body\">\n        {id}\n      </td>\n      <td className={classnames({ table__body: true, male: sex === 'm', female: sex === 'f' })}>\n        <Link to={`/people/${slug}`}>\n          {name}\n        </Link>\n      </td>\n      <td className={classnames({ table__body: true, male: sex === 'm', female: sex === 'f' })}>\n        {person.sex}\n      </td>\n      <td className={classnames({ table__body: true, male: sex === 'm', female: sex === 'f' })}>\n        {born}\n      </td>\n      <td className={classnames({ table__body: true, male: sex === 'm', female: sex === 'f' })}>-</td>\n      <td className={classnames({ table__body: true, male: sex === 'm', female: sex === 'f' })}>\n        {died}\n      </td>\n      <td className=\"table__body female\">\n        {typeof mother === 'object' ? (\n          <Link to={`/people/${mother.slug}`}>\n            {motherName}\n          </Link>\n        ) : (\n          <span>{ motherName || ' - - -' }</span>\n        )}\n      </td>\n      <td className=\"table__body male\">\n\n        {typeof father === 'object' ? (\n          <Link to={`/people/${father.slug}`}>\n            {fatherName}\n          </Link>\n        ) : (\n          <span>{ fatherName || ' - - -' }</span>\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { getPeople } from '../helpers/api';\nimport { PersonRow } from './PersonRow';\n\nconst tableHeader = ['id', 'name', 'sex', 'born', ' - ', 'died', 'mother', 'father'];\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople().then(peopleFromServer => {\n      const preparedPeople = peopleFromServer.map((person: Person, index: number) => ({\n        id: index + 1,\n        ...person,\n        mother: peopleFromServer.find((mom: { name: string }) => mom.name === person.motherName) || '',\n        father: peopleFromServer.find((dad: { name: string }) => dad.name === person.fatherName) || '',\n      }));\n\n      return setPeople(preparedPeople);\n    });\n  }, []);\n\n  return (\n    <>\n      <h2>People Page perhaps</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            {tableHeader.map(item => {\n              return <th className=\"table__header\" key={item}>{item.toUpperCase()}</th>;\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {people.map(person => (\n            <PersonRow key={person.slug} person={person} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  NavLink,\n  Redirect,\n} from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport './App.scss';\n\nconst App: React.FC = () => (\n  <HashRouter>\n    <div className=\"App\">\n      <h1>People table</h1>\n      <NavLink to=\"/\" exact>Transfer to Home</NavLink>\n      <NavLink to=\"/people\">Transfer to People</NavLink>\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/home\"><Redirect to=\"/\" /></Route>\n        <Route path=\"/people/:personSlug?\" component={PeoplePage} />\n        <>\n          <h2>Requested page has not been created yet</h2>\n        </>\n      </Switch>\n    </div>\n  </HashRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}