{"version":3,"sources":["components/HomePage.tsx","helpers/api.ts","components/PersonRow.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","getPeople","a","fetch","dataFromServer","json","people","PersonRow","person","id","name","sex","born","died","slug","fatherName","motherName","father","mother","personSlug","useParams","classes","table__body","male","female","className","classnames","active","key","to","TABLE_HEADERS","PeoplePage","useState","setPeople","query","setQuery","location","useLocation","history","useHistory","searchParams","URLSearchParams","search","applyQueryWithDebaunce","useCallback","debounce","queryValue","set","delete","push","toString","queryFromUrl","get","isSortedAsc","sortBy","useEffect","then","peopleFromServer","preparedPeople","map","index","find","mom","dad","haddleSortClick","item","visiblePeople","useMemo","result","filter","toLowerCase","includes","sort","b","localeCompare","reverse","type","value","onChange","target","length","headerTitle","onClick","toUpperCase","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.690a1dd9.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport const HomePage = () => {\n  return (\n    <h2>Home Page perhaps</h2>\n  );\n};\n","const urlWithPeople = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async (): Promise<Person[]> => {\n  const dataFromServer = await fetch(urlWithPeople);\n  const people = await dataFromServer.json();\n\n  return people;\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport {\n  Link,\n  useParams,\n} from 'react-router-dom';\n\n\ntype PropsPersonRow = {\n  person: Person;\n};\n\nexport const PersonRow: React.FC<PropsPersonRow> = ({ person }) => {\n  const {\n    id,\n    name,\n    sex,\n    born,\n    died,\n    slug,\n    fatherName,\n    motherName,\n    father,\n    mother,\n  } = person;\n\n  const { personSlug } = useParams();\n  const classes = { table__body: true, male: sex === 'm', female: sex === 'f' };\n\n  return (\n    <tr\n      className={classnames({ active: personSlug === slug })}\n      key={name}\n    >\n      <td className=\"table__body\">\n        {id}\n      </td>\n      <td className={classnames(classes)}>\n        <Link to={`/people/${slug}`}>\n          {name}\n        </Link>\n      </td>\n      <td className={classnames(classes)}>\n        {person.sex}\n      </td>\n      <td className={classnames(classes)}>\n        {born}\n      </td>\n      <td className={classnames(classes)}>-</td>\n      <td className={classnames(classes)}>\n        {died}\n      </td>\n      <td className=\"table__body female\">\n        {typeof mother === 'object' ? (\n          <Link to={`/people/${mother.slug}`}>\n            {motherName}\n          </Link>\n        ) : (\n          <span>{ motherName || ' - - - ' }</span>\n        )}\n      </td>\n      <td className=\"table__body male\">\n\n        {typeof father === 'object' ? (\n          <Link to={`/people/${father.slug}`}>\n            {fatherName}\n          </Link>\n        ) : (\n          <span>{ fatherName || ' - - - ' }</span>\n        )}\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, {\n  useState, useEffect, ChangeEventHandler, useCallback, useMemo,\n} from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport { getPeople } from '../helpers/api';\nimport { PersonRow } from './PersonRow';\n\nconst TABLE_HEADERS = ['id', 'name', 'sex', 'born', ' - ', 'died', 'mother', 'father'];\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [query, setQuery] = useState('');\n\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n\n  const applyQueryWithDebaunce = useCallback(\n    debounce((queryValue: string) => {\n      if (!queryValue) {\n        searchParams.delete('query');\n      } else {\n        searchParams.set('query', queryValue);\n      }\n\n      history.push({ search: searchParams.toString() });\n    }, 1000), [],\n  );\n\n  const handleInputChange: ChangeEventHandler<HTMLInputElement> = ({ target }) => {\n    setQuery(target.value);\n    applyQueryWithDebaunce(target.value);\n  };\n\n  const queryFromUrl = searchParams.get('query') || '';\n  const isSortedAsc = searchParams.get('sortOrder') !== 'desc';\n  const sortBy = searchParams.get('sortBy') || '';\n\n  useEffect(() => setQuery(queryFromUrl), [queryFromUrl]);\n\n  useEffect(() => {\n    getPeople().then(peopleFromServer => {\n      const preparedPeople = peopleFromServer.map((person: Person, index: number) => ({\n        id: index + 1,\n        ...person,\n        mother: peopleFromServer.find((mom: { name: string }) => mom.name === person.motherName) || '',\n        father: peopleFromServer.find((dad: { name: string }) => dad.name === person.fatherName) || '',\n      }));\n\n      return setPeople(preparedPeople);\n    });\n  }, []);\n\n  const haddleSortClick = useCallback((item) => {\n    searchParams.set('sortOrder', isSortedAsc ? 'desc' : 'asc');\n    searchParams.set('sortBy', item);\n    history.push({ search: searchParams.toString() });\n  }, [sortBy]);\n\n  const visiblePeople = useMemo(() => {\n    const result = people.filter(({ name, fatherName, motherName }) => {\n      return (name + motherName + fatherName).toLowerCase().includes((queryFromUrl).toLowerCase());\n    });\n\n    switch (sortBy) {\n      case 'name':\n        result.sort((a, b) => a.name.localeCompare(b.name));\n        break;\n      case 'born':\n        result.sort((a, b) => a.born - b.born);\n        break;\n      case 'died':\n        result.sort((a, b) => a.died - b.died);\n        break;\n      case 'sex':\n        result.sort((a, b) => a.sex.localeCompare(b.sex));\n        break;\n      case 'motherName':\n        result.sort((a, b) => a.motherName.localeCompare(b.motherName));\n        break;\n      case 'fatherName':\n        result.sort((a, b) => a.fatherName.localeCompare(b.fatherName));\n        break;\n      default:\n    }\n\n    if (!isSortedAsc) {\n      result.reverse();\n    }\n\n    return result;\n  }, [queryFromUrl, isSortedAsc, people]);\n\n  return (\n    <>\n      <h2>People Page perhaps</h2>\n      <div className=\"search-field\">\n        <input\n          type=\"text\"\n          className=\"search-field__input\"\n          value={query}\n          onChange={handleInputChange}\n        />\n      </div>\n      {visiblePeople.length === 0\n        ? <h3>No requested data, dude</h3>\n        : (\n          <table className=\"table\">\n            <thead>\n              <tr>\n                {TABLE_HEADERS.map(headerTitle => {\n                  return (\n                    <th\n                      className=\"table__header\"\n                      key={headerTitle}\n                      onClick={() => haddleSortClick(headerTitle)}\n                    >\n                      {headerTitle.toUpperCase()}\n                      {' '}\n                      {headerTitle === sortBy && (isSortedAsc ? <span className=\"arrow\">⬆️</span> : <span className=\"arrow\">⬇️</span>)}\n                    </th>\n                  );\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              {visiblePeople.map(person => (\n                <PersonRow key={person.slug} person={person} />\n              ))}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  NavLink,\n  Redirect,\n} from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport './App.scss';\n\nconst App: React.FC = () => (\n  <HashRouter>\n    <div className=\"App\">\n      <h1>People table</h1>\n      <NavLink to=\"/\" exact>Transfer to Home</NavLink>\n      <NavLink to=\"/people\">Transfer to People</NavLink>\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/home\"><Redirect to=\"/\" /></Route>\n        <Route path=\"/people/:personSlug?\" component={PeoplePage} />\n        <>\n          <h2>Requested page has not been created yet</h2>\n        </>\n      </Switch>\n    </div>\n  </HashRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}