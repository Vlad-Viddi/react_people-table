{"version":3,"sources":["helpers/api.ts","App.tsx","index.tsx"],"names":["getPeople","a","fetch","dataFromServer","json","people","tableHeader","HomePage","PersonRow","person","key","name","id","sex","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","useEffect","then","peopleFromServer","preparedPeople","map","index","find","mom","dad","className","item","App","to","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"2RAEaA,EAAS,uCAAG,8BAAAC,EAAA,sEACMC,MAHT,qEAEG,cACjBC,EADiB,gBAEFA,EAAeC,OAFb,cAEjBC,EAFiB,yBAIhBA,GAJgB,2CAAH,qDCoBhBC,G,MAAc,CAAC,KAAM,OAAQ,MAAO,OAAQ,OAAQ,SAAU,WAE9DC,EAAW,WACf,OACE,kDAQEC,EAAsC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7C,OACE,wBAAIC,IAAKD,EAAOE,MACd,4BACGF,EAAOG,IAEV,4BACGH,EAAOE,MAEV,4BACGF,EAAOI,KAEV,4BACGJ,EAAOK,MAEV,4BACGL,EAAOM,MAEV,4BACGN,EAAOO,OAASP,EAAOQ,WAAa,SAEvC,4BACGR,EAAOS,OAAST,EAAOU,WAAa,WAMvCC,EAAa,WAAO,IAAD,EACKC,mBAAmB,IADxB,mBAChBhB,EADgB,KACRiB,EADQ,KAgBvB,OAbAC,qBAAU,WACRvB,IAAYwB,MAAK,SAAAC,GACf,IAAMC,EAAiBD,EAAiBE,KAAI,SAAClB,EAAgBmB,GAAjB,mBAAC,aAC3ChB,GAAIgB,EAAQ,GACTnB,GAFuC,IAG1CO,OAAQS,EAAiBI,MAAK,SAACC,GAAD,OAA2BA,EAAInB,OAASF,EAAOQ,eAAe,GAC5FC,OAAQO,EAAiBI,MAAK,SAACE,GAAD,OAA2BA,EAAIpB,OAASF,EAAOU,eAAe,QAG9F,OAAOG,EAAUI,QAElB,IAGD,oCACE,mDACA,2BAAOM,UAAU,SACf,2BAAOA,UAAU,iBACf,4BACG1B,EAAYqB,KAAI,SAAAM,GACf,OAAO,wBAAIvB,IAAKuB,GAAOA,QAI7B,+BACG5B,EAAOsB,KAAI,SAAAlB,GAAM,OAChB,kBAAC,EAAD,CAAWA,OAAQA,WA0BhByB,EAlBO,kBACpB,kBAAC,IAAD,KACE,yBAAKF,UAAU,OACb,4CACA,kBAAC,IAAD,CAASG,GAAG,IAAIC,OAAK,GAArB,oBACA,kBAAC,IAAD,CAASD,GAAG,WAAZ,sBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,IAAID,OAAK,EAACE,UAAW/B,IACjC,kBAAC,IAAD,CAAO8B,KAAK,SAAQ,kBAAC,IAAD,CAAUF,GAAG,OACjC,kBAAC,IAAD,CAAOE,KAAK,UAAUC,UAAWlB,IACjC,oCACE,4ECzGVmB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.221e221f.chunk.js","sourcesContent":["const urlWithPeople = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async (): Promise<Person[]> => {\n  const dataFromServer = await fetch(urlWithPeople);\n  const people = await dataFromServer.json();\n\n  return people;\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  NavLink,\n  Redirect,\n} from 'react-router-dom';\nimport { getPeople } from './helpers/api';\nimport './App.css';\n\n// type TableHeader = {\n//   id: number;\n//   name: string;\n//   sex: string;\n//   born: number;\n//   died: number;\n//   mother: string;\n//   father: string;\n// };\n\n\nconst tableHeader = ['id', 'name', 'sex', 'born', 'died', 'mother', 'father'];\n\nconst HomePage = () => {\n  return (\n    <h2>Home Page perhaps</h2>\n  );\n};\n\ntype PropsPersonRow = {\n  person: Person;\n};\n\nconst PersonRow: React.FC<PropsPersonRow> = ({ person }) => {\n  return (\n    <tr key={person.name}>\n      <td>\n        {person.id}\n      </td>\n      <td>\n        {person.name}\n      </td>\n      <td>\n        {person.sex}\n      </td>\n      <td>\n        {person.born}\n      </td>\n      <td>\n        {person.died}\n      </td>\n      <td>\n        {person.mother ? person.motherName : '- - -'}\n      </td>\n      <td>\n        {person.father ? person.fatherName : '- - -'}\n      </td>\n    </tr>\n  );\n};\n\nconst PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople().then(peopleFromServer => {\n      const preparedPeople = peopleFromServer.map((person: Person, index: number) => ({\n        id: index + 1,\n        ...person,\n        mother: peopleFromServer.find((mom: { name: string }) => mom.name === person.motherName) || '',\n        father: peopleFromServer.find((dad: { name: string }) => dad.name === person.fatherName) || '',\n      }));\n\n      return setPeople(preparedPeople);\n    });\n  }, []);\n\n  return (\n    <>\n      <h2>People Page perhaps</h2>\n      <table className=\"table\">\n        <thead className=\"table__header\">\n          <tr>\n            {tableHeader.map(item => {\n              return <th key={item}>{item}</th>;\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {people.map(person => (\n            <PersonRow person={person} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nconst App: React.FC = () => (\n  <HashRouter>\n    <div className=\"App\">\n      <h1>People table</h1>\n      <NavLink to=\"/\" exact>Transfer to Home</NavLink>\n      <NavLink to=\"/people\">Transfer to People</NavLink>\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/home\"><Redirect to=\"/\" /></Route>\n        <Route path=\"/people\" component={PeoplePage} />\n        <>\n          <h2>Requested page has not been created yet</h2>\n        </>\n      </Switch>\n    </div>\n  </HashRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}