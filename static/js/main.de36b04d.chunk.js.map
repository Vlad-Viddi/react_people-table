{"version":3,"sources":["components/HomePage.tsx","helpers/api.ts","components/PersonRow.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","getPeople","a","fetch","dataFromServer","json","people","PersonRow","person","id","name","sex","born","died","slug","fatherName","motherName","father","mother","personSlug","useParams","classes","table__body","male","female","className","classnames","active","key","to","tableHeader","PeoplePage","useState","setPeople","query","setQuery","useEffect","then","peopleFromServer","preparedPeople","map","index","find","mom","dad","visiblePeople","filter","toLowerCase","includes","type","value","onChange","event","target","handleInputChange","length","item","toUpperCase","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de36b04d.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport const HomePage = () => {\n  return (\n    <h2>Home Page perhaps</h2>\n  );\n};\n","const urlWithPeople = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async (): Promise<Person[]> => {\n  const dataFromServer = await fetch(urlWithPeople);\n  const people = await dataFromServer.json();\n\n  return people;\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport {\n  Link,\n  useParams,\n} from 'react-router-dom';\n\n\ntype PropsPersonRow = {\n  person: Person;\n};\n\nexport const PersonRow: React.FC<PropsPersonRow> = ({ person }) => {\n  const {\n    id,\n    name,\n    sex,\n    born,\n    died,\n    slug,\n    fatherName,\n    motherName,\n    father,\n    mother,\n  } = person;\n\n  const { personSlug } = useParams();\n  const classes = { table__body: true, male: sex === 'm', female: sex === 'f' };\n\n  return (\n    <tr\n      className={classnames({ active: personSlug === slug })}\n      key={name}\n    >\n      <td className=\"table__body\">\n        {id}\n      </td>\n      <td className={classnames(classes)}>\n        <Link to={`/people/${slug}`}>\n          {name}\n        </Link>\n      </td>\n      <td className={classnames(classes)}>\n        {person.sex}\n      </td>\n      <td className={classnames(classes)}>\n        {born}\n      </td>\n      <td className={classnames(classes)}>-</td>\n      <td className={classnames(classes)}>\n        {died}\n      </td>\n      <td className=\"table__body female\">\n        {typeof mother === 'object' ? (\n          <Link to={`/people/${mother.slug}`}>\n            {motherName}\n          </Link>\n        ) : (\n          <span>{ motherName || ' - - - ' }</span>\n        )}\n      </td>\n      <td className=\"table__body male\">\n\n        {typeof father === 'object' ? (\n          <Link to={`/people/${father.slug}`}>\n            {fatherName}\n          </Link>\n        ) : (\n          <span>{ fatherName || ' - - - ' }</span>\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React, { useState, useEffect, ChangeEventHandler } from 'react';\nimport { getPeople } from '../helpers/api';\nimport { PersonRow } from './PersonRow';\n\nconst tableHeader = ['id', 'name', 'sex', 'born', ' - ', 'died', 'mother', 'father'];\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [query, setQuery] = useState('');\n\n  const handleInputChange: ChangeEventHandler<HTMLInputElement> = ({ target }) => {\n    setQuery(target.value);\n  };\n\n  useEffect(() => {\n    getPeople().then(peopleFromServer => {\n      const preparedPeople = peopleFromServer.map((person: Person, index: number) => ({\n        id: index + 1,\n        ...person,\n        mother: peopleFromServer.find((mom: { name: string }) => mom.name === person.motherName) || '',\n        father: peopleFromServer.find((dad: { name: string }) => dad.name === person.fatherName) || '',\n      }));\n\n      return setPeople(preparedPeople);\n    });\n  }, []);\n  const visiblePeople = people.filter(({ name, fatherName, motherName }) => {\n    return (name + motherName + fatherName).toLowerCase().includes(query.toLowerCase());\n  });\n\n  return (\n    <>\n      <h2>People Page perhaps</h2>\n      <div className=\"search-field\">\n        <input\n          type=\"text\"\n          className=\"search-field__input\"\n          value={query}\n          onChange={(event) => handleInputChange(event)}\n        />\n      </div>\n      {visiblePeople.length === 0\n        ? <div>No requested data, dude</div>\n        : (\n          <table className=\"table\">\n            <thead>\n              <tr>\n                {tableHeader.map(item => {\n                  return <th className=\"table__header\" key={item}>{item.toUpperCase()}</th>;\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              {visiblePeople.map(person => (\n                <PersonRow key={person.slug} person={person} />\n              ))}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  NavLink,\n  Redirect,\n} from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport './App.scss';\n\nconst App: React.FC = () => (\n  <HashRouter>\n    <div className=\"App\">\n      <h1>People table</h1>\n      <NavLink to=\"/\" exact>Transfer to Home</NavLink>\n      <NavLink to=\"/people\">Transfer to People</NavLink>\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/home\"><Redirect to=\"/\" /></Route>\n        <Route path=\"/people/:personSlug?\" component={PeoplePage} />\n        <>\n          <h2>Requested page has not been created yet</h2>\n        </>\n      </Switch>\n    </div>\n  </HashRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}